<!-- Generated with SimSnap -->
<!-- -->
<!-- u = 1 v = 1   -->
<!-- input tree: (((0[0.006]:0.0057,1[0.006]:0.0057)[0.006]:0.0045,2[0.006]:0.0102)[0.006]:0.0138,3[0.006]:0.024)[0.006]:0.03;-->
<!--SimTree = (((0[theta = 0.006, nc = 0.6]:0.0057,1[theta = 0.006, nc = 0.85]:0.0057)[theta = 0.006, nc = 1.3]:0.0045,2[theta = 0.006, nc = 0.95]:0.0102)[theta = 0.006, nc = 1.3]:0.0138,3[theta = 0.006, nc = 1]:0.024)[theta = 0.006, nc = 1]:0.03;
-->
<beast version='2.0' namespace='snap:snap.likelihood:beast.util:beast.evolution'>

<map name='snapprior'>snap.likelihood.SnAPPrior</map>
<map name='snaptreelikelihood'>snap.likelihood.SnAPTreeLikelihood</map>



	<!-- n = 20 -->
	<data spec='snap.Data' id='snapalignment' dataType='integerdata' statecount='3'>
		<sequence taxon='A' totalcount='3'>
2,2,1,0,2,2,0,0,2,2,0,2,0,0,0,1,0,2,0,2,
		</sequence>
		<sequence taxon='B' totalcount='3'>
2,0,2,1,2,2,0,0,2,0,1,2,0,0,0,0,0,0,0,1,
		</sequence>
		<sequence taxon='C' totalcount='3'>
0,0,2,0,1,2,0,1,0,2,0,1,0,0,1,0,0,2,0,2,
		</sequence>
		<sequence taxon='D' totalcount='3'>
2,0,2,0,2,0,2,0,0,2,0,2,1,2,2,0,2,2,2,2,
		</sequence>
	</data>



<!-- If starting from true tree, set stateBurnin='0' -->
<run id='mcmc' spec='snap.MCMC' chainLength='1' preBurnin='0' stateBurnin='0'>
        <state>
      <tree name='stateNode' spec='ClusterTree' id='tree' nodetype='snap.NodeData' clusterType='upgma'>
               <input name='taxa' idref='snapalignment'/>
      </tree>   
  
			<parameter name='stateNode' id='coalescenceRate' value='10'/>
          <parameter name='stateNode' id='v' value='1' lower='0.0'/>
          <parameter name='stateNode' id='u' value='1' lower='0.0'/>
          <parameter name='stateNode' id='alpha'  value='2' lower='0.0'/>
          <parameter name='stateNode' id='beta'   value='20' lower='0.0'/>
          <parameter name='stateNode' id='lambda' value='54.1667' lower='0.0'/>
          <parameter name='stateNode' id='kappa'   value='34.6574' lower='0.0'/>

        </state>

        <distribution id='posterior' spec='beast.core.util.CompoundDistribution'>
            <distribution id='prior' spec='beast.core.util.CompoundDistribution'>
                <distribution spec='beast.math.distributions.Prior' id='lambdaPrior' x='@lambda'>
                    <distr spec='beast.math.distributions.OneOnX'/>
                </distribution>
                <distribution spec='SnAPPrior' name='distribution' id='snapprior' 
                    kappa='@kappa' alpha='@alpha' beta='@beta' lambda='@lambda' rateprior='gamma'
                    coalescenceRate='@coalescenceRate' tree='@tree'
                    />
            </distribution>
            <snaptreelikelihood name='distribution' id='treeLikelihood' initFromTree='false' non-polymorphic='false' pattern='rate' data='@snapalignment' tree='@tree'>
                <siteModel spec='sitemodel.SiteModel' id='siteModel'>
				      <substModel spec='snap.likelihood.SnapSubstitutionModel'
                    mutationRateU='@u' mutationRateV='@v' coalescenceRate='@coalescenceRate'/>
				  </siteModel>
            </snaptreelikelihood>
        </distribution>

        <stateDistribution idref='prior'/>

        <!--uncomment following line to estimate lambda-->
        <!--operator spec='operators.ScaleOperator' scaleFactor='0.25' weight='0.5' parameter='@lambda'/-->
        <operator spec='operators.NodeSwapper' weight='0.5' tree='@tree'/>
        <operator spec='operators.NodeBudger' weight='4' size='0.5' tree='@tree'/>
        <operator spec='operators.ScaleOperator' scaleFactor='0.25' weight='0.5' tree='@tree'/>
        <operator spec='operators.GammaMover' scale='0.5' weight='4' coalescenceRate='@coalescenceRate'/>
        <operator spec='operators.RateMixer' scaleFactors='0.25' weight='1' coalescenceRate='@coalescenceRate' tree='@tree'/>

        <logger logEvery='1000'>
			  <model idref='posterior'/>
            <log idref='u'/>
            <log idref='v'/>
            <log idref='prior'/>
            <log idref='lambdaPrior'/>
            <log idref='treeLikelihood'/>
            <log idref='posterior'/>
            <log idref='lambda'/>
	          <log spec='beast.evolution.tree.TreeHeightLogger' tree='@tree'/>
        </logger>
        <logger logEvery='100' fileName='1TreeFig4BryantVincent_tree_1.$(seed).log'>
	          <model idref='posterior'/>
            <log idref='u'/>
            <log idref='v'/>
            <log idref='prior'/>
            <log idref='lambdaPrior'/>
            <log idref='treeLikelihood'/>
            <log idref='posterior'/>
            <log idref='lambda'/>
		      <log idref='coalescenceRate'/>
		      <log spec='snap.ThetaLogger' coalescenceRate='@coalescenceRate'/>
		      <log spec='beast.evolution.tree.TreeHeightLogger' tree='@tree'/>
            <log spec='TreeLengthLogger' tree='@tree'/>
        </logger>
        <logger fileName='1TreeFig4BryantVincent_tree_1.$(seed).trees' id='treelog' logEvery='100' mode='tree'>
            <log id='TreeWithMetaDataLogger0' spec='beast.evolution.tree.TreeWithMetaDataLogger' tree='@tree'>
                <metadata coalescenceRate='@coalescenceRate' spec='snap.RateToTheta' id='theta'/>
            </log>
        </logger>
</run>


</beast>
